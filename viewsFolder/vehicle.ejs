<!DOCTYPE html>
<html>
  <head>
    <title>Vehicle Details</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"
    />
    <style>
      body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background: linear-gradient(to right, #0072ff, #00c6ff);
        color: white; /* Make text white */
        flex-direction: column; /* Stack items vertically */
      }
      .vehicle-card {
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        width: 50%;
        max-width: 600px;
        position: relative;
        color: black; /* Text color for content within the card */
        display: flex;
        flex-wrap: wrap; /* Allow wrapping as needed */
        justify-content: space-between; /* Space between columns */
      }
      .vehicle-image {
        margin: 0 auto;
        width: 100%;
      }
      .vehicle-image img {
        width: 100%;
        height: auto;
        object-fit: cover;
        display: block;
        border-radius: 4px;
        margin-bottom: 20px; /* Space below image */
        margin: 0 auto;
      }
      .editable {
        margin: 10px 0;
        position: relative;
        flex-basis: 48%; /* Take up less than half the container width */
      }
      .edit-icon {
        position: absolute;
        right: 0;
        top: 0;
        cursor: pointer;
        color: #ccc;
      }
      input[type="text"],
      select {
        width: calc(100% - 20px);
        padding: 8px;
        margin-top: 5px;
        border-radius: 4px;
        border: 1px solid #ccc;
        display: none;
      }
      .make,
      .model {
        /* Larger text for Make and Model */
        font-size: 1.2em;
      }

      .button {
        display: inline-block;
        padding: 10px 20px;
        margin-top: 20px;
        border-radius: 5px;
        text-decoration: none;
        cursor: pointer;
        transition: transform 0.3s ease;
      }

      .delete-button {
        background: white; /* Red background */
        color: #ff4d4d; /* White text */
        border: 1px solid #ff4d4d;
      }

      .delete-button:hover {
        background: #ff4d4d; /* Darker red on hover */
        color: white; /* White text on hover */
        cursor: pointer;
      }

      .top-bar {
        padding: 10px;
        padding-top: 0px;
        background: transparent;
        text-align: right;
        width: 100%;
        box-sizing: border-box;
        position: fixed;
        top: 0;
      }

      .api-docs-button {
        background: white;
        color: #0072ff;
        border: 1px solid #0072ff;
      }
      .api-docs-button:hover {
        background: lightgrey;
        transform: translate(-5px, -5px);
      }

      .all-vehicles {
        background: black;
        color: white;
        border: 1px solid black;
      }

      .all-vehicles:hover {
        background: darkgray;
        transform: translate(-5px, -5px);
      }

      .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0, 0, 0); /* Fallback color */
        background-color: rgba(0, 0, 0, 0.8); /* Black w/ opacity */
      }

      .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 40%; /* Could be more or less, depending on screen size */
        border-radius: 5px;
        text-align: center;
      }

      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
      }

      .close:hover,
      .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
      }

      .confirm-delete-text {
        text-align: center;
        margin-bottom: 20px;
        color: black;
        font-size: 1.6rem;
      }

      .delete-confirm {
        background: #ff4d4d; /* Red background */
        color: white; /* White text */
        border: none; /* Remove border */
      }

      .delete-confirm:hover {
        background: #cc0000; /* Darker red on hover */
        cursor: pointer;
      }

      .cancel {
        background: white; /* White background */
        color: #0072ff; /* Blue text */
        border: 1px solid #0072ff; /* Blue border */
      }

      .cancel:hover {
        background: lightgrey; /* Light grey background on hover */
        transform: translate(-2px, -2px); /* Slight hover effect */
        cursor: pointer;
      }

      .button-container {
        display: flex;
        justify-content: center; /* Center the buttons horizontally */
        gap: 20px; /* Add some space between the buttons */
        margin-top: 20px; /* Space above the buttons */
      }
    </style>
  </head>
  <body>
    <div class="top-bar">
      <a href="/vehicles" class="button all-vehicles">All Vehicles</a>
      <a href="/api-docs" class="button api-docs-button">API Docs</a>
    </div>
    <h1>Vehicle Details</h1>
    <div class="vehicle-card">
      <div class="vehicle-image">
        <img
          src="data:image/png;base64,<%= vehicle.base64Image %>"
          alt="<%= vehicle.make %> <%= vehicle.model %>"
        />
      </div>
      <% ['make', 'model', 'year', 'color', 'price', 'condition',
      'vin'].forEach(function(field, index) { %>
      <div
        class="editable <%= field === 'make' || field === 'model' ? field : '' %>"
        data-field="<%= field %>"
        data-value="<%= vehicle[field] %>"
      >
        <span
          ><%= field === 'price' ? '$' + Number(vehicle[field]).toLocaleString()
          : vehicle[field] %></span
        >
        <input type="text" value="<%= vehicle[field] %>" />
        <i class="fas fa-pencil-alt edit-icon"></i>
      </div>
      <% }); %>
      <button class="button delete-button">Delete Vehicle</button>
    </div>
    <div id="deleteConfirmation" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <p class="confirm-delete-text">
          Are you sure you want to delete this vehicle?
        </p>
        <div class="button-container">
          <button class="button cancel">Cancel</button>
          <button class="button delete-confirm">Delete</button>
        </div>
      </div>
    </div>

    <script>
      document.querySelectorAll(".edit-icon").forEach(function (icon) {
        icon.addEventListener("click", function () {
          const parent = icon.closest(".editable");
          const input = parent.querySelector("input");
          const span = parent.querySelector("span");

          // Toggle display states
          span.style.display = "none";
          input.style.display = "inline-block";
          input.focus();
        });
      });

      document.querySelectorAll(".editable input").forEach(function (input) {
        input.addEventListener("blur", function () {
          const parent = input.closest(".editable");
          const span = parent.querySelector("span");

          // Update the span text and toggle display states back
          if (parent.dataset.field === "price") {
            const formattedValue = Number(input.value).toLocaleString();
            span.innerText = `$${formattedValue}`;
          } else {
            span.innerText = input.value;
          }

          span.style.display = "inline-block";
          input.style.display = "none";

          // Call updateVehicle() as before
          updateVehicle(parent.dataset.field, input.value);
        });

        input.addEventListener("keypress", function (e) {
          if (e.key === "Enter") {
            input.blur(); // Trigger blur to save
          }
        });
      });

      function updateVehicle(field, value) {
        // AJAX request to update the vehicle
        fetch("/vehicles/<%= vehicle._id %>", {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ [field]: value }),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Success:", data);
            // You can add any success handling here
          })
          .catch((error) => console.error("Error:", error));
      }

      document
        .querySelector(".delete-button")
        .addEventListener("click", function () {
          document.getElementById("deleteConfirmation").style.display = "block";
        });

      document.querySelector(".close").addEventListener("click", function () {
        document.getElementById("deleteConfirmation").style.display = "none";
      });

      document.querySelector(".cancel").addEventListener("click", function () {
        document.getElementById("deleteConfirmation").style.display = "none";
      });

      document
        .querySelector(".delete-confirm")
        .addEventListener("click", function () {
          // Place the fetch DELETE request logic here
          fetch("/vehicles/<%= vehicle._id %>", {
            method: "DELETE",
          })
            .then((response) => {
              if (response.ok) {
                alert("Vehicle deleted successfully.");
                window.location = "/vehicles"; // Redirect to the vehicles listing
              } else {
                alert("There was an error deleting the vehicle.");
              }
            })
            .catch((error) => console.error("Error:", error));
        });
    </script>
  </body>
</html>
